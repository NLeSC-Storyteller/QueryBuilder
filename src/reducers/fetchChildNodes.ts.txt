

export const fetchChildNodes = (dispatch: any) => {
    const handleTheStatus = (response: Response) => {
        if (response.ok) {
            return response.json();
        } else {
            throw new Error('Error when trying to retrieve the data. ' +
                'status text: \"' + response.statusText + '".');
        }
    };

    const handleTheData = (dbrecords: any) => {

        const nodes: NodeLogic[] = [];
        for (const dbrecord of dbrecords) {
            nodes.push(new NodeLogic(dbrecord));
        }

        const addNodesAction = {
            type: 'ADD_NODES',
            payload: nodes
        };
        console.log('should dispatch ', addNodesAction);
        dispatch(addNodesAction);
    };

    const handleAnyErrors = (err: Error) => {
        console.error('Errors occured.', err.message, err.stack );
    };

    const url: string = 'http://localhost:5000/node/' + this.dbrecord.id.toString() + '/children';

    fetch(url, {method: 'get'})
            .then(handleTheStatus)
            .then(handleTheData)
            .catch(handleAnyErrors);
};
